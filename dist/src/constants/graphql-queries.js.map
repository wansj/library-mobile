{"version":3,"sources":["../../../src/constants/graphql-queries.js"],"names":["gql","GetPublicKeyQuery","GetAvailableRolesQuery","GetFileByIDQuery","GetCaptchaQuery","GetLogedUserQuery","GetRecordsQuery","GetCollectionQuery","GetCollectedBooksQuery","GetRootCategoriesQuery","GetChildrenCategoriesQuery","GetBooksQuery","BooksCountQuery","GetPopularAuthorsQuery","GetPublishersQuery","GetChildrenByPathQuery","GetBookById","GetBookCoverById","GetBookCommentsProfileQuery","GetBookCommentsQuery","HasUserCommentedForTheBookQuery","GetCartCountQuery","GetBooksInCartQuery","GetBooksInPlanQuery","GetSubsInCartQuery","GetFriendsQuery","GetUserByIDQuery","GetSessionQuery","GetGroupedPostsQuery","GetUserByNameOrEmailQuery","GetUnhandledFriendshipQuery","GetReadPlansQuery","GetInterestsQuery","GetMostBorrowedQuery","GetMostCollectedQuery","GetMostRecommandedQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;;AAEA,OAAO,IAAMC,oBAAoBD,GAApB,iBAAN;AAKP,OAAO,IAAME,yBAAyBF,GAAzB,kBAAN;AAQP,OAAO,IAAMG,mBAAmBH,GAAnB,kBAAN;AAOP,OAAO,IAAMI,kBAAkBJ,GAAlB,kBAAN;AAKP,OAAO,IAAMK,oBAAoBL,GAApB,kBAAN;AAuCP,OAAO,IAAMM,kBAAkBN,GAAlB,kBAAN;AAoBP,OAAO,IAAMO,qBAAqBP,GAArB,kBAAN;AAYP,OAAO,IAAMQ,yBAAyBR,GAAzB,kBAAN;AAQP,OAAO,IAAMS,yBAAyBT,GAAzB,kBAAN;AAQP,OAAO,IAAMU,6BAA6BV,GAA7B,mBAAN;AAQP,OAAO,IAAMW,gBAAgBX,GAAhB,mBAAN;AAcP,OAAO,IAAMY,kBAAkBZ,GAAlB,mBAAN;AAKP,OAAO,IAAMa,yBAAyBb,GAAzB,mBAAN;AAKP,OAAO,IAAMc,qBAAqBd,GAArB,mBAAN;AAKP,OAAO,IAAMe,yBAAyBf,GAAzB,mBAAN;AAQP,OAAO,IAAMgB,cAAchB,GAAd,mBAAN;AAsBP,OAAO,IAAMiB,mBAAmBjB,GAAnB,mBAAN;AASP,OAAO,IAAMkB,8BAA8BlB,GAA9B,mBAAN;AAaP,OAAO,IAAMmB,uBAAuBnB,GAAvB,mBAAN;AAmBP,OAAO,IAAMoB,kCAAkCpB,GAAlC,mBAAN;AAKP,OAAO,IAAMqB,oBAAoBrB,GAApB,mBAAN;AAKP,OAAO,IAAMsB,sBAAsBtB,GAAtB,mBAAN;AAiBP,OAAO,IAAMuB,sBAAsBvB,GAAtB,mBAAN;AAiBP,OAAO,IAAMwB,qBAAqBxB,GAArB,mBAAN;AAaP,OAAO,IAAMyB,kBAAkBzB,GAAlB,mBAAN;AAcP,OAAO,IAAM0B,mBAAmB1B,GAAnB,mBAAN;AAWP,OAAO,IAAM2B,kBAAkB3B,GAAlB,mBAAN;AAKP,OAAO,IAAM4B,uBAAuB5B,GAAvB,mBAAN;AAwBP,OAAO,IAAM6B,4BAA4B7B,GAA5B,mBAAN;AAeP,OAAO,IAAM8B,8BAA8B9B,GAA9B,mBAAN;AAcP,OAAO,IAAM+B,oBAAoB/B,GAApB,mBAAN;AAgBP,OAAO,IAAMgC,oBAAoBhC,GAApB,mBAAN;AASP,OAAO,IAAMiC,uBAAuBjC,GAAvB,mBAAN;AAcP,OAAO,IAAMkC,wBAAwBlC,GAAxB,mBAAN;AAcP,OAAO,IAAMmC,0BAA0BnC,GAA1B,mBAAN","file":"graphql-queries.js","sourcesContent":["import gql from 'graphql-tag'\n\nexport const GetPublicKeyQuery = gql`\n  query GetPublicKey{\n    publicKey\n  }\n`\nexport const GetAvailableRolesQuery = gql`\n  query GetAvailableRoles{\n    availableRoles{\n      id\n      name\n    }\n  }\n`\nexport const GetFileByIDQuery = gql`\n  query GetFileByID($id: ID!){\n    fileByID(id: $id){\n      file\n    }\n  }\n`\nexport const GetCaptchaQuery = gql`\n  query GetCaptcha($email: String!){\n    getCaptcha(email: $email)\n  }\n`\nexport const GetLogedUserQuery = gql`\n  query GetLogedUser{\n    logedUser{\n      id\n      username\n      department\n      loged\n      email\n      avatar\n      photo{\n        file\n      }\n      role{\n        id\n        isAdmin\n        name\n        maxBorrowDuration\n        maxHoldCount\n        maxDelayTimes\n        maxDelayDays\n      }\n      statistics{\n        maxHoldCount\n        readCount\n        interests\n        recentRead{\n            book{\n              id\n              title\n              picture{\n                file\n              }\n            }\n        }\n        credit\n      }\n    }\n  }\n`\nexport const GetRecordsQuery = gql`\n  query GetRecords($skip: Int!, $limit: Int!, $filter: RecordsFilter){\n    records(skip: $skip, limit: $limit, filter: $filter){\n      id\n      book{\n        id\n        title\n        picture{\n          file\n        }\n        authors\n        summary\n      }\n      date\n      deadline\n      returnDate\n      timeout\n    }\n  }\n`\nexport const GetCollectionQuery = gql`\n  query GetCollection($userId: ID!, $skip: Int, $limit: Int){\n    collection(userId: $userId, skip: $skip, limit: $limit){\n      id\n      title\n      summary\n      picture{\n        file\n      }\n    }\n  }\n`\nexport const GetCollectedBooksQuery = gql`\n  query GetCollection($userId: ID!, $skip: Int, $limit: Int){\n    collection(userId: $userId, skip: $skip, limit: $limit){\n      id\n      title\n    }\n  }\n`\nexport const GetRootCategoriesQuery = gql`\n  query GetRootCategories {\n    rootCategories{\n      id\n      label\n    }\n  }\n`\nexport const GetChildrenCategoriesQuery = gql`\n  query GetChildrenCategories($id: ID!) {\n    childrenCategories(id: $id) {\n      id\n      label\n    }\n  }\n`\nexport const GetBooksQuery = gql`\n  query GetBooks($skip: Int!, $limit: Int!, $filter: BooksFilter) {\n    booksFiltered(skip: $skip, limit: $limit, filter: $filter) {\n      id\n      title\n      volume\n      authors\n      publisher\n      picture{\n        file\n      }\n    }\n  }\n`\nexport const BooksCountQuery = gql`\n  query BooksCount($filter: BooksFilter) {\n    bookCount(filter: $filter) \n  }\n`\nexport const GetPopularAuthorsQuery = gql`\n  query GetPopularAuthors($category: String!){\n    popularAuthors(category: $category) \n  }\n`\nexport const GetPublishersQuery = gql`\n  query GetPublishers($category: String!){\n    publishers(category: $category)\n  }\n`\nexport const GetChildrenByPathQuery = gql`\n  query GetChildrenByPath($path: String!){\n    childrenByPath(path: $path){\n      id\n      label\n    }\n  }\n`\nexport const GetBookById = gql`\n  query GetBookById($id: ID!) {\n    book(id: $id){\n      isbn\n      title\n      authors\n      translators\n      publisher\n      summary\n      pubDate\n      version\n      category\n      count\n      location\n      price\n      volume\n      picture {\n        file\n      }\n    }\n  }\n`\nexport const GetBookCoverById = gql`\n  query GetBookCoverBy($id: ID!) {\n    book(id: $id){\n      picture {\n        file\n      }\n    }\n  }\n`\nexport const GetBookCommentsProfileQuery = gql`\n  query GetBookCommentsProfile($bookId: String!){\n    bookCommentsProfile(bookId: $bookId){\n      count\n      average\n      max\n      group{\n        level\n        percent\n      }\n    }\n  }\n`\nexport const GetBookCommentsQuery = gql`\n  query GetBookComments($skip: Int!, $limit: Int!, $bookId: String!){\n    bookComments(skip: $skip, limit: $limit, bookId: $bookId){\n      id\n      details\n      title\n      thumbs\n      score\n      postDate\n      userId\n      user{\n        photo{\n          file\n        }\n        username\n      }\n    }\n  }\n`\nexport const HasUserCommentedForTheBookQuery = gql`\n  query HasUserCommentedForTheBook($userId: String!, $bookId: String!){\n    hasUserCommented(userId: $userId, bookId: $bookId)\n  }\n`\nexport const GetCartCountQuery = gql`\n  query GetCartCount{\n    cartCount\n  }\n`\nexport const GetBooksInCartQuery = gql`\n  query GetBooksInCart{\n    booksInCart{\n      id\n      isbn\n      title\n      authors\n      count\n      scheduledCount\n      category\n      location\n      picture{\n        file\n      }\n    }\n  }\n`\nexport const GetBooksInPlanQuery = gql`\n  query GetBooksInPlan($userId: String, $kind: ReserveKind!){\n    booksInPlan(userId: $userId, kind: $kind){\n      expireAt\n      books{\n        id\n        title\n        authors\n        category\n        location\n        picture{\n          file\n        }\n      }\n    }\n  }\n`\nexport const GetSubsInCartQuery = gql`\n  query GetSubsInCart{\n    subsInCart{\n      isbn\n      title\n      picture{\n        file\n      }\n      count\n      scheduledCount\n    }\n  }\n`\nexport const GetFriendsQuery = gql`\n  query GetFriends($skip: Int!,$limit: Int!){\n    getFriends(skip: $skip, limit: $limit){\n      group\n      friends{\n        id\n        username\n        photo{\n          file\n        }\n      }\n    }\n  }\n`\nexport const GetUserByIDQuery = gql`\n  query GetUserByID($id: ID!){\n    user(id: $id){\n      id\n      username\n      photo{\n        file\n      }\n    }\n  }\n`\nexport const GetSessionQuery = gql`\n  query GetSession($participators: [ID!]!){\n    getSession(participators: $participators)\n  }\n`\nexport const GetGroupedPostsQuery = gql`\n  query GetGroupedPosts($sessionId: ID!, $skip: Int!, $limit: Int!){\n    posts(sessionId: $sessionId, skip: $skip, limit: $limit){\n      iat\n      posts{\n        id\n        postBy\n        message\n        book{\n          id\n          title\n          summary\n          picture{\n            file\n          }\n        }\n        status{\n          receiver\n          unread\n        }\n      }\n    }\n  }\n`\nexport const GetUserByNameOrEmailQuery = gql`\n  query GetUserByNameOrEmail($search: String!){\n    userByNameOrEmail(search: $search){\n      friend{\n         id\n         username\n         department\n         photo{\n           file\n         }\n      } \n      status\n    }\n  }\n`\nexport const GetUnhandledFriendshipQuery = gql`\n  query GetUnhandledFriendship{\n    unHandledFriendship{\n      id\n      initiator{\n        username\n        photo{\n          file\n        }\n      }\n      validateMessage\n    }\n  }\n`\nexport const GetReadPlansQuery = gql`\n  query GetReadPlans{\n    readPlans{\n      id\n      title\n      plans{\n        book{\n          id\n          title\n        }\n        process\n        timespan\n      }\n    }\n  }\n`\nexport const GetInterestsQuery = gql`\n  query GetInterests{\n    interests{\n      category\n      percent\n      count\n    }\n  }\n`\nexport const GetMostBorrowedQuery = gql`\n  query GetMostBorrowed($skip: Int!, $limit: Int!){\n     mostBorrowed(skip: $skip, limit: $limit){\n       count\n       book{\n         id\n         title\n         picture{\n           file\n         }\n       }\n     }\n  }\n`\nexport const GetMostCollectedQuery = gql`\n  query GetMostCollected($skip: Int!, $limit: Int!){\n     mostCollected(skip: $skip, limit: $limit){\n       count\n       book{\n         id\n         title\n         picture{\n           file\n         }\n       }\n     }\n  }\n`\nexport const GetMostRecommandedQuery = gql`\n  query GetMostRecommanded($skip: Int!, $limit: Int!){\n     mostRecommanded(skip: $skip, limit: $limit){\n       count\n       book{\n         id\n         title\n         picture{\n           file\n         }\n       }\n     }\n  }\n`\n"]}